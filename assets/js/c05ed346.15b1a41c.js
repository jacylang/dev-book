"use strict";(self.webpackChunkdev_book=self.webpackChunkdev_book||[]).push([[2757],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||a;return n?r.createElement(m,i(i({ref:t},f),{},{components:n})):r.createElement(m,i({ref:t},f))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},474:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return f},default:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={},s="Algebraic Effects",c={unversionedId:"ideas/alg-effects",id:"ideas/alg-effects",isDocsHomePage:!1,title:"Algebraic Effects",description:"Ooh, that's gonna be cool.",source:"@site/docs/ideas/alg-effects.md",sourceDirName:"ideas",slug:"/ideas/alg-effects",permalink:"/dev-book/docs/ideas/alg-effects",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/ideas/alg-effects.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Why affine types",permalink:"/dev-book/docs/concept/why-affine-types"},next:{title:"Code Style Conventions",permalink:"/dev-book/docs/ideas/code-style-conventions"}},f=[{value:"Little Glossary",id:"little-glossary",children:[],level:2},{value:"Syntax",id:"syntax",children:[{value:"<code>perform</code> syntax",id:"perform-syntax",children:[],level:3}],level:2}],p={toc:f};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"algebraic-effects"},"Algebraic Effects"),(0,a.kt)("p",null,"Ooh, that's gonna be cool."),(0,a.kt)("p",null,"I'm still not really in Algebraic Effects (algeff or AE further), same for the programming world mainstream.\nAnyway, here I want to discuss the ability to add ae to the language similar to Rust."),(0,a.kt)("h2",{id:"little-glossary"},"Little Glossary"),(0,a.kt)("p",null,"To simplify reading this idea, I'll describe the words used here.\nThe better explanation for algebraic effects I see is from the view of ",(0,a.kt)("inlineCode",{parentName:"p"},"try/catch")," as these are pretty similar concepts."),(0,a.kt)("p",null,"To ",(0,a.kt)("em",{parentName:"p"},"perform")," an effect is like ",(0,a.kt)("inlineCode",{parentName:"p"},"throw")," for exceptions -- we pause function execution and waiting for the handler.\nTo ",(0,a.kt)("em",{parentName:"p"},"handle"),' an effect means "doing something with the data ',(0,a.kt)("strong",{parentName:"p"},"performer")," passed."),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,"At first, what do we need to know is what effects does particular function perform.\nEffects should not be inferred for raw functions (",(0,a.kt)("inlineCode",{parentName:"p"},"func"),"), for closures it's okay."),(0,a.kt)("p",null,"From the view of syntax we need to express effects handling, typing and performing."),(0,a.kt)("p",null,"The keywords I think pretty to use for ae:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"perform")," - For effect performing."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"with")," - For effects annotations (in ",(0,a.kt)("inlineCode",{parentName:"li"},"func")," signatures, etc)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"handle")," - For blocks that handles effects, much like the ",(0,a.kt)("inlineCode",{parentName:"li"},"match")," expression."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"effect")," - Declares a new effect item.")),(0,a.kt)("h3",{id:"perform-syntax"},(0,a.kt)("inlineCode",{parentName:"h3"},"perform")," syntax"),(0,a.kt)("p",null,"The keyword ",(0,a.kt)("inlineCode",{parentName:"p"},"perform")," is similar to ",(0,a.kt)("inlineCode",{parentName:"p"},"break")," expression with a value (optional too, though)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jc"},"// Let's imagine we are somewhere in a function\n{\n    if something {\n        perform effect1.\n    }\n}\n")))}u.isMDXComponent=!0}}]);