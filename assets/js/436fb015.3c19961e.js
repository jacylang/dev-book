"use strict";(self.webpackChunkdev_book=self.webpackChunkdev_book||[]).push([[1488],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},45385:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],c={},l="`const` keyword",s={unversionedId:"particles/compile-time-evaluation/const-keyword",id:"particles/compile-time-evaluation/const-keyword",isDocsHomePage:!1,title:"`const` keyword",description:"In CTE const used to declare, obviously, a constant which will be evaluated at compile-time and which usages will be",source:"@site/docs/particles/compile-time-evaluation/const-keyword.md",sourceDirName:"particles/compile-time-evaluation",slug:"/particles/compile-time-evaluation/const-keyword",permalink:"/dev-book/docs/particles/compile-time-evaluation/const-keyword",editUrl:"https://github.com/jacylang/dev-book/edit/master/docs/particles/compile-time-evaluation/const-keyword.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Meaningful names check",permalink:"/dev-book/docs/particles/Lincy/meaningful-names"},next:{title:"CTE Contexts",permalink:"/dev-book/docs/particles/compile-time-evaluation/cte-contexts"}},p=[],u={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"const-keyword"},(0,a.kt)("inlineCode",{parentName:"h1"},"const")," keyword"),(0,a.kt)("p",null,"In CTE ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," used to declare, obviously, a constant which will be evaluated at compile-time and which usages will be\ninlined."),(0,a.kt)("p",null,"I wanna note that ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," is a synonym for compile-time evaluable expression, so further I'll use it in this context."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"const")," must be immediately assigned when declared. Syntax."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-antlr4"},"'const' IDENT '=' expr\n")),(0,a.kt)("p",null,"After ",(0,a.kt)("inlineCode",{parentName:"p"},"'='")," goes an expression which MUST also be CTE, but not exactly another ",(0,a.kt)("inlineCode",{parentName:"p"},"const"),"."),(0,a.kt)("p",null,"The difference between ",(0,a.kt)("inlineCode",{parentName:"p"},"let")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," is that ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," is an item, whereas ",(0,a.kt)("inlineCode",{parentName:"p"},"let")," is a statement. As being an item\n",(0,a.kt)("inlineCode",{parentName:"p"},"const")," can be placed mostly on any level, including top-level."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jc"},"const a = 10\n\ntrait MyTrait {\n    const traitConst = 1010\n}\n\nfunc main() {\n    const b = 123\n}\n")))}m.isMDXComponent=!0}}]);