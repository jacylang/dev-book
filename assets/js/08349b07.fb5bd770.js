"use strict";(self.webpackChunkdev_book=self.webpackChunkdev_book||[]).push([[264],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},28276:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],c={},l="Organic _Jacy_",s={unversionedId:"particles/organic-jacy",id:"particles/organic-jacy",isDocsHomePage:!1,title:"Organic _Jacy_",description:"The idea of organic Jacy is to have deeper underlying language than main and unsafe dialect.",source:"@site/docs/particles/organic-jacy.md",sourceDirName:"particles",slug:"/particles/organic-jacy",permalink:"/dev-book/docs/particles/organic-jacy",editUrl:"https://github.com/jacylang/dev-book/edit/master/docs/particles/organic-jacy.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Optional Chaining and the Try operator",permalink:"/dev-book/docs/particles/optional-chaining-&-try"},next:{title:"Arguments placement rules",permalink:"/dev-book/docs/particles/params-args-matching"}},u=[{value:"Some notes",id:"some-notes",children:[{value:"Parser extension?",id:"parser-extension",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"organic-jacy"},"Organic ",(0,o.kt)("em",{parentName:"h1"},"Jacy")),(0,o.kt)("p",null,"The idea of organic ",(0,o.kt)("em",{parentName:"p"},"Jacy")," is to have deeper underlying language than main and unsafe dialect."),(0,o.kt)("p",null,"Organic is a dialect of ",(0,o.kt)("em",{parentName:"p"},"Jacy")," which does not replace but extends the functionality.\nIt is kind of ",(0,o.kt)("inlineCode",{parentName:"p"},"unsafe")," code but from the view of compiler stability, safety, etc."),(0,o.kt)("p",null,"If some feature idea sounds awkward or dangerous for the target user, but by the way is well-formed and working -- it can be added to organic dialect."),(0,o.kt)("h2",{id:"some-notes"},"Some notes"),(0,o.kt)("h3",{id:"parser-extension"},"Parser extension?"),(0,o.kt)("p",null,"Organic ",(0,o.kt)("em",{parentName:"p"},"Jacy")," does not extend parser, it does not include DSL for parser-generator whatever.\nAnyway, OJ includes some constructions that extend syntax, e.g. custom operators declaration."))}d.isMDXComponent=!0}}]);